# In .github/workflows/deploy.yml

name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

# Add this permissions block to grant the necessary access
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build job: prepares your site files
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create secrets.js
        run: |
          echo "const googleApiKey = \"${{ secrets.GOOGLE_API_KEY }}\";" > js/secrets.js
          echo "const mapboxAccessToken = \"${{ secrets.MAPBOX_ACCESS_TOKEN }}\";" >> js/secrets.js
          echo "const tracestrackApiKey = \"${{ secrets.TRACESTRACK_API_KEY }}\";" >> js/secrets.js
          echo "const stravaClientId = \"${{ secrets.STRAVA_CLIENT_ID }}\";" >> js/secrets.js
          echo "const stravaClientSecret = \"${{ secrets.STRAVA_CLIENT_SECRET }}\";" >> js/secrets.js

      - name: Replace Placeholders
        run: |
          # Extract values from config.js
          APP_NAME_VALUE=$(grep 'const APP_NAME' js/config.js | cut -d '"' -f 2)
          APP_SHORT_NAME_VALUE=$(grep 'const APP_SHORT_NAME' js/config.js | cut -d '"' -f 2)
          APP_DESC_VALUE=$(grep 'const APP_DESCRIPTION' js/config.js | cut -d '"' -f 2)
          APP_SHORT_DESC_VALUE=$(grep 'const APP_SHORT_DESCRIPTION' js/config.js | cut -d '"' -f 2)

          # Replace in index.html (uses the LONG description)
          sed -i "s|__APP_NAME__|${APP_NAME_VALUE}|g" index.html
          sed -i "s|__APP_DESCRIPTION__|${APP_DESC_VALUE}|g" index.html

          # Replace in manifest.json (uses the SHORT description)
          sed -i "s|__APP_NAME__|${APP_NAME_VALUE}|g" manifest.json
          sed -i "s|__APP_SHORT_NAME__|${APP_SHORT_NAME_VALUE}|g" manifest.json
          sed -i "s|__APP_SHORT_DESCRIPTION__|${APP_SHORT_DESC_VALUE}|g" manifest.json

      # Steps for JavaScript Minification ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install JavaScript minifier (Terser)
        run: npm install -g terser

      - name: Bundle, Minify, and Update HTML
        run: |
          # 1. Bundle all script files into a single temporary file
          cat js/config.js js/utils.js js/ui-handlers.js js/map-interactions.js js/file-handlers.js js/elevation.js js/routing.js js/strava.js js/main.js > js/bundle.js

          # 2. Minify the bundled file into app.min.js and create a source map for debugging
          terser js/bundle.js -c -m -o js/app.min.js --source-map "filename='js/app.min.js.map'"

          # 3. Automatically replace the original script tags in index.html with a single tag for the minified file
          sed -i '/<script src="js\/config.js"/,/<script src="js\/main.js"/c\    <script src="js/app.min.js"><\/script>' index.html

      # Upload the entire directory
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

  # Deploy job: takes the prepared files and deploys them
  deploy:
    # Requires the build job to succeed first
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
